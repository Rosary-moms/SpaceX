<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Daily Green Exposure Estimator, by ROSARY ©®™, 2025 ff</title>
    <link rel="icon" type="image/x-icon" href="/rosary/favicon.ico">
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        label { display: block; margin: 10px 0; }
        button { padding: 5px 10px; background-color: #4CAF50; color: white; border: none; cursor: pointer; }
        #result { margin-top: 20px; font-weight: bold; color: #006600; }
    </style>
</head>
<body>
    <h2>Daily Green Exposure Estimator</h2>
    <label>Walk (km): <input type="number" id="walk" value="3"></label>
    <label>Bike (km): <input type="number" id="bike" value="5"></label>
    <label>Lat: <input type="number" id="lat" step="0.0001" value="52.5200"></label>
    <label>Lon: <input type="number" id="lon" step="0.0001" value="13.4050"></label>
    <button onclick="estimateExposure()">Estimate</button>
    <p id="result"></p>

    <script>
        let totalPoints = 0; // Für Gamification

        async function getOsmGreenAreas(lat, lon) {
            const bbox = `${lat-0.01},${lon-0.01},${lat+0.01},${lon+0.01}`;
            const query = `[out:json][timeout:25];nwr["leisure"="park"](${bbox});out count;`;
            const url = `https://overpass-api.de/api/interpreter?data=${encodeURIComponent(query)}`;
            try {
                const response = await fetch(url);
                const result = await response.json();
                console.log('OSM Result:', result); // Debug: Öffne F12 > Console
                return parseInt(result.elements?.[0]?.tags?.total || 0);
            } catch (error) {
                console.error('OSM Error:', error);
                return 0;
            }
        }

        function estimateExposure() {
            const walk = parseFloat(document.getElementById('walk').value) || 0;
            const bike = parseFloat(document.getElementById('bike').value) || 0;
            const lat = parseFloat(document.getElementById('lat').value);
            const lon = parseFloat(document.getElementById('lon').value);

            if (isNaN(lat) || isNaN(lon)) {
                document.getElementById('result').innerHTML = 'Error: Invalid coordinates!';
                return;
            }

            document.getElementById('result').innerHTML = 'Loading...';

            getOsmGreenAreas(lat, lon).then(greenAreas => {
                const exposureHours = ((walk + bike) / 5) * (greenAreas / 10);
                const benefit = (walk + bike) * 10;
                totalPoints += (walk + bike) * 5; // Gamification: 5 Punkte pro km
                const level = Math.floor(totalPoints / 100);
                const badge = totalPoints >= 200 ? 'Eco-Hero' : 'Green Explorer';

                document.getElementById('result').innerHTML = `Green Exposure: ${exposureHours.toFixed(2)} hours<br>
                    Health Benefit: ${benefit}%<br>
                    Points: ${totalPoints}, Level: ${level}, Badge: ${badge}`;
            }).catch(error => {
                console.error('Error:', error);
                document.getElementById('result').innerHTML = 'Error: Check console (F12)';
            });
        }
    </script>
</body>
</html>
